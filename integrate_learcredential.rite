---
title: Authentication with LEARCredential for existing applications

editors:
    - name: "Jesus Ruiz"
      email: "jesus@alastria.io"
      company: "Alastria"
      companyURL: "https://alastria.ioio/"
authors:
    - name: "The DOME project participants"

copyright: >
   Copyright Â© 2024 the document editors/authors. Text is available under the
   <a rel="license" href="https://creativecommons.org/licenses/by/4.0/legalcode">
   Creative Commons Attribution 4.0 International Public License</a>

latestVersion: "https://dome-marketplace.github.io/iam-guide/index.html"
edDraftURI: "https://dome-marketplace.github.io/iam-guide/index.html"
github: "https://github.com/dome-marketplace/iam-guide"
og_description: >
    Authentication with LEARCredential for existing applications
og_site_name: DOME Identity and Access Management
localBiblioFile: "localbiblio.yaml"
---

<h2 #subtitle>Integrating with the `VCVerifier` component in DOME 

<section #abstract>

    The DOME BAE Marketplace uses LEARCredentials to enable users to authenticate with the portal, by allowing users to present a LEARCredential that they hold in their wallets.

    This guide is intended for implementers of applications operated by the DOME Operator who want to perform authentication using the same LEARCredentials used by the DOME BAE Marketplace. 

<section>Description of the integration

    Enabling an application to use LEARCredentials for authentication and access control is relatively easy. It works almost exactly as if adding a 'Login with Google' button. The application does not require knowledge of how the Verifiable Credentials are exchanged with the Wallet.

    When the Application wishes to authenticate a user, it has to direct the user to the login screen of the VCVerifier (by a popup), and eventually, the Application will be notified by the VCVerifier when the authentication is completed. At that moment, the Application requests an Access Token from the VCVerifier and the JWT returned from the VCVerifier will include in its payload the LEARCredential that the user presented for authentication.

    The Application has then to use the fields inside the LEARCredential to determine the capabilities of the user and the functionalities to which that user is entitled.

    A more detailed description of the process follows.

    <x-diagram .plantuml>Overall LEAR Credential issuance flow
        !include <tupadr3/common>
        !include <office/Servers/database_server>
        !include <office/Servers/application_server>
        !include <office/Concepts/firewall_orange>
        !include <office/Clouds/cloud_disaster_red>
        !include <office/Devices/cell_phone_generic>
        !include <office/Devices/device_laptop>
        !include <office/Security/trusted_application_server>
        !include <office/Users/user>

        box "User" #WhiteSmoke
            actor "User" as user
            participant "<$cell_phone_generic>\nPhone" as wallet
            participant "<$device_laptop>\nLaptop" as laptop
        end box

        box "DOME Operator" #WhiteSmoke
            participant "<$trusted_application_server>\nVCVerifier" as verifier
            participant "<$application_server>\nApplication" as application
        end box

        user --> laptop++:  **(1)** Access the application
        & laptop -> application--++:
        # -(1. User accesses the Application)
            The user enters into the HTML page provided by the Application using her laptop (or any other device)

        application -> laptop--++: **(2)** Display a 'Login' button
        # -(2. Application displays a Login button)
            The application wants the user to authenticate

        user --> laptop: **(3)** User clicks Login button
        laptop -> application--++

        application -> laptop++: **(4)** Open popup to VCVerifier login screen
        laptop -> verifier--++
        # -(4. Open popup to VCVerifier login screen)
            The Application opens a new browser window (a popup), pointing to the VCVerifier login screen. The URL contains two parameters, like in the following (newlines and tabs added to facilitate reading):

            <x-code .ini>
                https://verifier.dome-marketplace.org/api/v1/loginQR?
                    state=d74105c4-2b1c-4a7b-b088-4a1ede7348c6
                    &client_callback=https://dome-marketplace.org/auth/vc/callback
                    &client_id=marketplace-client

            <ul>
                - **URL**: the base URL is `https://verifier.dome-marketplace.org/api/v1/loginQR`
                - **state**: A unique random number that will be used on the callback, so that the calling Application can identify the user-session being initiated
                - **client_callback**: The URL which will be called by the VCVerifier after successful verification of the LEARCRedential received from the user
                - **client_id**: The identifier assigned in the DOME environment to the specific Application using the VCVerifier


        verifier <-> wallet: **(5)** Execute the OIDC4VP protocol
        # -(5. Execute the OIDC4VP protocol)
            The VCVerifier interacts with the Wallet and the User to receive and validate the LEARCredential

        verifier -> application: Invoke client_callback
        application -> verifier
        # -(6. Invoke `client_callback`)
            The VCVerifier notifies to the Application by calling it with a GET request to the URL that the Application specified in the `client_callback` parameter. The URL includes also the `state` parameter, and a `code` parameter which will be used by the Application to exchange it for an Access Token.

            <x-code .ini>
                https://dome-marketplace.org/auth/vc/callback?
                    state=d74105c4-2b1c-4a7b-b088-4a1ede7348c6?
                    code=IwMTgvY3JlZGVudGlhbHMv

            The Application uses the `state` parameter to match the notification from the VCVerifier with the user session that the Application started when the user clicked the Login button.

            If the session is still active (it could have expired because the user took too long to authenticate), then the Application will call to the well-known `token` endpoint of the VCVerifier. In our case, the endpoint is: 

            <x-code .ini>
                https://verifier.dome-marketplace.org/token

        application -> verifier--: Request AccessToken
        # -(7. Request Access Token)
            The Application requests the Access Token with a POST request to the `token` endpoint of the VCVerifier. The request is like this:

            <x-code .Bash>
                curl -X 'POST' \
                'https://localhost:8080/token' \
                -H 'accept: application/json' \
                -H 'Content-Type: application/x-www-form-urlencoded' \
                -d 'grant_type=authorization_code&code=IwMTgvY3JlZGVudGlhbHMv'            

        verifier -> application--++: Reply with AccessToken
        # -(8. Reply with AccesToken)
            The VCVerifier replies with the following JSON object, which contains the Access Token in the form of a JWT signed by the VCVerifier:

            <x-code -json>
                {
                    "token_type": "Bearer",
                    "expires_in": 3600,
                    "access_token": "ewogICJhbGciOiAiRVMyNTYiLAogICJraWQ....YycHRab1lrdE1LcERBIgogIH0KfQ"
                }

            The Access Token can be used by the Application to perform access control as it wishes. The Access Token includes in the payload of the JWT the complete LEARCredential that the user presented to the VCVerifier.

            Information about the user is in the `mandatee` object, and the powers that the user has are in the `power` object. The legal representative delegating the powers to the user is identified in the `mandator` object.
            
            An example of a LEARCredential is the following:

            <x-code .json>
                {
                    "@context": [
                        "https://www.w3.org/ns/credentials/v2",
                        "https://www.evidenceledger.eu/2022/credentials/employee/v1"
                    ],
                    "aud": [
                        "everybody"
                    ],
                    "credentialSubject": {
                        "mandate": {
                            "id": "2ad373bc-fe40-4378-8f7c-a8feacb1867d",
                            "life_span": {
                                "end_date_time": "2025-04-09 09:43:54.684766001 +0000 UTC",
                                "start_date_time": "2024-04-09 09:43:54.684766001 +0000 UTC"
                            },
                            "mandatee": {
                                "email": "hesus.ruiz@gmail.com",
                                "first_name": "Juan",
                                "id": "did:key:z2dmzD81cgPx8Vki7JbuuMmFYrWPgYoytykUZ3eyqht1j9Kbq3Ak5ZTNZco281jHsjzWoxkQtdBhU6GBeqx7Z1YGiUBo3XHvrNnTboyzosUWhhLwLssWwzUHwrzX9Md4PaKbU2LqgxevQTrNChNmndQwTfZbQeh2NDGw2krd7W1vdmjbH6",
                                "last_name": "Lopez",
                                "mobile_phone": "676477104"
                            },
                            "mandator": {
                                "commonName": "RUIZ MARTINEZ JESUS - 21442837Y",
                                "country": "ES",
                                "emailAddress": "jesus@alastria.io",
                                "organization": "RUIZ MARTINEZ JESUS - 21442837Y",
                                "organizationIdentifier": "IDCES-21442837Y",
                                "serialNumber": "IDCES-21442837Y"
                            },
                            "power": [
                                {
                                    "id": "1b5cd9f5-058d-48df-b0b0-60d581f1565b",
                                    "tmf_action": [
                                        "Execute"
                                    ],
                                    "tmf_domain": [
                                        "DOME"
                                    ],
                                    "tmf_function": "Onboarding",
                                    "tmf_type": "Domain"
                                },
                                {
                                    "id": "97448fe1-4c81-4c03-823b-e88ddc52d323",
                                    "tmf_action": [
                                        "Create",
                                        "Update"
                                    ],
                                    "tmf_domain": [
                                        "DOME"
                                    ],
                                    "tmf_function": "ProductOffering",
                                    "tmf_type": "Domain"
                                }
                            ]
                        }
                    },
                    "exp": 1744192315,
                    "expirationDate": "2025-04-09 09:43:54.684766001 +0000 UTC",
                    "iat": 1712656315,
                    "id": "fa0ad4d7-5271-43c4-be5a-091be4980721",
                    "iss": "did:elsi:IDCES-21442837Y",
                    "issuanceDate": "2024-04-09 09:43:54.684766001 +0000 UTC",
                    "issuer": {
                        "id": "did:elsi:IDCES-21442837Y"
                    },
                    "jti": "fa0ad4d7-5271-43c4-be5a-091be4980721",
                    "nbf": 1712656315,
                    "sub": "did:key:z2dmzD81cgPx8Vki7JbuuMmFYrWPgYoytykUZ3eyqht1j9Kbq3Ak5ZTNZco281jHsjzWoxkQtdBhU6GBeqx7Z1YGiUBo3XHvrNnTboyzosUWhhLwLssWwzUHwrzX9Md4PaKbU2LqgxevQTrNChNmndQwTfZbQeh2NDGw2krd7W1vdmjbH6",
                    "type": [
                        "VerifiableCredential",
                        "LEARCredentialEmployee"
                    ],
                    "validFrom": "2024-04-09 09:43:54.684766001 +0000 UTC"
                }







        application -> laptop--++: Display logged in screen

<section #references>
